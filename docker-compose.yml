version: '3.8'
services:
  eureka-server:
    build:
      context: ./eureka-server/docker
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - microservices-network

  migration-service:
    build:
      context: ./migration-service/docker
      dockerfile: Dockerfile
    ports:
      - "8084:8084"
    depends_on:
      - postgres
    networks:
      - microservices-network

  api-gateway-service:
    build:
      context: ./api-gateway-service/docker
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - eureka-server
    networks:
      - microservices-network

  video-service:
    build:
      context: ./video-service/docker
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - eureka-server
      - migration-service
    networks:
      - microservices-network

  video-metadata-service:
    build:
      context: ./video-metadata-service/docker
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - eureka-server
      - migration-service
    networks:
      - microservices-network

  video-statistic-service:
    build:
      context: ./video-statistic-service/docker
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - eureka-server
      - migration-service
    networks:
      - microservices-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - microservices-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    networks:
      - microservices-network

  postgres:
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: video_streaming_api_db
    ports:
      - "5433:5432"
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge
